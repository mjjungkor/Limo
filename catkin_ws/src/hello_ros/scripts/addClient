import rospy, random
from hello_ros.srv import AddTwoInts, AddTwoIntsRequest, AddTwoIntsResponse

class ServiceClient:
    def __init__(self):
        self.client=rospy.ServiceProxy('add_two_int', AddTwoInts)
        while not rospy.is_shutdown():
            try:
                self.client.wait_for_service(timeout=1.0) # 클라이언트가 서버에 접속을 시도했을때 응답을 대기하는 시간
                break
            except rospy.ROSException:
                rospy.loginfo(f'server is not ready!')
        rospy.Timer(rospy.Duration(nsecs=5_000_000_000), self.send_request)

    def send_request(self, _event):
        data = AddTwoIntsRequest()
        data.a = random.randint(0, 100)
        data.b = random.randint(0, 100)
        data.op = random.choice(["plus", "minus", "Unkown"])
        rospy.loginfo(f"서비스 요청 {data.a} {data.b} {data.op}")

        response :AddTwoIntsResponse = self.client.call(data) # 동기적!! 3초 동안 대기.
        rospy.loginfo(f"{response.message} : {response.result}")
        rospy.loginfo(f"{response.success}")


def main():
    rospy.init_node('service_client')
    node=ServiceClient()
    #node.send_request() # 단일 처리 하는 곳에 사용

    while not rospy.is_shutdown():
        rospy.spin() # subscription & timer 처리

if __name__=='__main__':
    main()